{"version":3,"sources":["logo.png","Components/LaunchItem.js","Components/MissionKey.js","Components/Launches.js","Components/Launch.js","Components/Nav.js","Components/RocketItem.js","Components/Rockets.js","Components/ImageThumb.js","Components/Rocket.js","Components/Home.js","Components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","img","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","mission_patch","links","react_default","a","createElement","className","src","logo","alt","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","details","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","_data$launch$links","wikipedia","video_link","href","target","rel","Nav","style","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","exact","activeClassName","RocketItem","_ref$rocket","first_flight","flickr_images","ROCKETS_QUERY","Rockets","rockets","ImageThumb","url","selectThumb","isHighlighted","cursor","border","onClick","e","ROCKET_QUERY","Rocket","_this","call","primaryPic","state","prime_img","thumb","setState","formatNum","number","numsArr","toConsumableArray","toString","reverse","output","forEach","index","push","join","_this2","_data$rocket","success_rate_pct","description","height","feet","diameter","mass","lb","display","justifyContent","COMPANY_QUERY","Home","_data$company","company","name","founder","founded","employees","vehicles","launch_sites","summary","_data$company$headqua","headquarters","address","city","NotFound","class","client","ApolloClient","uri","App","BrowserRouter","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7313028.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","import React from 'react'\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.png';\n\nexport default function LaunchItem({ launch : { flight_number, mission_name, launch_date_local, launch_success, links: { mission_patch } } }) {\n  const isImgEmpty = (img) => img ? img : logo;\n  \n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <img \n            className=\"img-thumbnail img-style\"\n            src={ isImgEmpty(mission_patch) } \n            alt={ mission_name }\n          />\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Mission:{' '}\n            <span className={ classNames({\n              'text-success': launch_success,\n              'text-danger': !launch_success\n            }) }>\n              { mission_name }\n            </span>\n          </h4>\n          <p>Date: <Moment format=\"MMMM Do, YYYY hh:mm a\">{ launch_date_local }</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={ `/launch/${flight_number}` } className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function MissionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n      </p>\n    </div>\n  )\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql(`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      details\n      links {\n        mission_patch\n        wikipedia\n        video_link\n      }\n    }\n  }\n`);\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey />\n        <Query query={ LAUNCHES_QUERY } >\n          {\n            ({ loading, error, data }) => {\n              if(loading) return <h4>Loading....</h4>;\n              if(error) console.log(error);\n\n              return (\n                <Fragment>\n                  {\n                    data.launches.map( launch => (\n                      <LaunchItem key={ launch.flight_number } launch={ launch } />\n                    ))\n                  }\n                </Fragment>\n              );\n            }\n          }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launches\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport logo from '../logo.png';\n\n\nconst LAUNCH_QUERY = gql(`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local,\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n      details\n      links {\n        mission_patch\n        wikipedia\n        video_link\n      }\n    }\n  }\n`);\n\nconst isImgEmpty = (img) => img ? img : logo;\n\nexport class Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n\n    return (\n      <Fragment>\n        <Query query={ LAUNCH_QUERY } variables={ {flight_number} }>\n          {\n            ({ loading, error, data }) => {\n              if(loading) return <h4>Loading</h4>;\n              if(error) console.log(error);\n              const { \n                flight_number, \n                mission_name, \n                launch_year, \n                launch_success,\n                details,\n                rocket: { rocket_id, rocket_name, rocket_type },\n                links: { mission_patch, wikipedia, video_link }\n               } = data.launch;\n             \n              return (\n                <div>\n                  <h1 className=\"display-4 my-3\">\n                    <span className=\"text-danger\">Mission:</span> { mission_name }\n                  </h1>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <img className=\"img-style prime-img\" src={ isImgEmpty(mission_patch) } alt={ mission_name }/>\n                    </div>\n                    <div className=\"col-md-6\">  \n                      <h4 className=\"mb-3\">Launch Details</h4>\n                      <ul className=\"list-group\">\n                        <li className=\"list-group-item\">\n                          <span className=\"text-white\">Flight Number:</span> { flight_number }\n                        </li>\n                        <li className=\"list-group-item\">\n                          <span className=\"text-white\">Launch Year:</span> { launch_year }\n                        </li>\n                        <li className=\"list-group-item\">\n                          <span className=\"text-white\">Launch Successful:</span> <span className={ classNames({\n                            'text-success': launch_success,\n                            'text-danger': !launch_success\n                          }) }>{ launch_success ? 'Yes' : 'No' }</span>\n                        </li>\n                        { details &&\n                          <li className=\"list-group-item\">\n                            <span className=\"text-white\">Details:</span> { details }\n                          </li>\n                        }\n                      </ul>\n                      <h4 className=\"my-3\">Rocket Details</h4>\n                      <ul className=\"list-group\">\n                        <li className=\"list-group-item\">Rocket ID: { rocket_id }</li>\n                        <li className=\"list-group-item\">Rocket Name: { rocket_name }</li>\n                        <li className=\"list-group-item\">Rocket Type: { rocket_type }</li>\n                      </ul>\n                      <hr/>\n                      <div className=\"button-row\">\n                        { video_link &&\n                          <a href={ video_link } className=\"btn btn-secondary\" target=\"_blank\" rel=\"noopener noreferrer\">Watch Launch</a>\n                        }\n                        { wikipedia &&\n                          <a href={ wikipedia } className=\"btn btn-secondary\" target=\"_blank\" rel=\"noopener noreferrer\">More Info</a>\n                        }\n                          <Link to=\"/launches\" className=\"btn btn-secondary\">Back</Link>\n                      </div><br/><br/>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          }\n        </Query>\n        \n      </Fragment>\n    )\n  }\n}\n\nexport default Launch\n","import React from 'react';\nimport logo from '../logo.png';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light bg-dark\">\n      <Link to=\"/\" >\n        <img \n          src={ logo } alt=\"SpaceX\" \n          style={{ width: 250 }}\n        />\n      </Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon bg-secondary\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbar\">\n        <ul className=\"navbar-nav ml-2 mr-auto mt-2 mt-lg-0\">\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/\" className=\"nav-link text-white text-center\" activeClassName=\"active-nav\">Home</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/launches\" className=\"nav-link text-white text-center\" activeClassName=\"active-nav\">Launches</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/rockets\" className=\"nav-link text-white text-center\" activeClassName=\"active-nav\">Rockets</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react'\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function RocketItem({ rocket : { rocket_id, rocket_name, rocket_type, first_flight, flickr_images } }) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <img \n            className=\"img-thumbnail img-style\"\n            src={ flickr_images[0] } \n            alt={ rocket_name }\n          />\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Rocket: <span className=\"text-white\">{ rocket_name }</span></h4>\n          <p>Rocket Type: { rocket_type }</p>\n          <p>First Flight: <Moment format=\"MMMM Do, YYYY\">{ first_flight }</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={ `/rocket/${rocket_id}` } className=\"btn btn-secondary\">\n            Rocket Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport RocketItem from './RocketItem';\n\nconst ROCKETS_QUERY = gql(`\n  query RocketsQuery {\n    rockets {\n      rocket_id\n      rocket_name\n      rocket_type\n      first_flight\n      flickr_images\n    }\n  }\n`);\n\nexport class Rockets extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"display-4 my-3\">Rockets</h1>\n        <Query query={ ROCKETS_QUERY } >\n          {\n            ({ loading, error, data }) => {\n              if(loading) return <h4>Loading....</h4>;\n              if(error) console.log(error);\n\n              return (\n                <Fragment>\n                  {\n                    data.rockets.map( rocket => (\n                      <RocketItem key={ rocket.rocket_id } rocket={ rocket } />\n                    ))\n                  }\n                </Fragment>\n              );\n            }\n          }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Rockets\n","import React from 'react';\n\nexport default function ImageThumb({ url, alt, selectThumb, isHighlighted }) {\n  const selectedThumbHandler = (e) => {\n    const src = e.target.src;\n\n    return selectThumb(src);\n  };\n\n  return (\n    <div className=\"text-center\">\n      <img \n        className=\"img-thumbnail\"\n        src={ url } \n        alt={ alt }\n        style={{ width: \"85%\", cursor: 'pointer', border: isHighlighted(url) }}\n        onClick={ selectedThumbHandler }\n      />\n    </div>\n  )\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport ImageThumb from './ImageThumb';\n\nconst ROCKET_QUERY = gql(`\n  query RocketQuery($rocket_id: String!) {\n    rocket(rocket_id: $rocket_id) {\n      rocket_id\n      rocket_name\n      rocket_type\n      success_rate_pct\n      first_flight\n      flickr_images\n      description\n      height {\n        feet\n      }\n      diameter {\n        feet\n      }\n      mass {\n        lb\n      }\n    }\n  }\n`);\n\nexport class Rocket extends Component {\n  constructor() {\n    super()\n    this.state = { prime_img: '' };\n  }\n\n  primaryPic = (value) => {\n    return this.state.prime_img === ''\n      ? value\n      : this.state.prime_img;\n  }\n\n  selectThumb = (src, thumb) => {\n    this.setState({ prime_img: src });\n  }\n\n  isHighlighted = (src) => {\n    if(this.state.prime_img !== '') {\n      return src === this.state.prime_img\n        ? '2px solid red'\n        : '1px solid #dee2e6';\n    }\n  }\n\n  formatNum = (number) => {\n    let numsArr = [...number.toString()].reverse();\n    let output = [];\n    numsArr.forEach((number, index) => {\n      output.push(number)\n      if((index + 1) % 3 === 0 && numsArr[index + 1]) {\n        output.push(',')\n      }\n    });\n  \n    return output.reverse().join('');\n  }\n\n  render() {\n    const { rocket_id } = this.props.match.params;\n\n    return (\n      <Fragment>\n        <Query query={ ROCKET_QUERY } variables={ { rocket_id } }>\n          {\n            ({ loading, error, data }) => {\n              if(loading) return <h4>Loading</h4>;\n              if(error) console.log(error);\n              const { \n                rocket_name,\n                rocket_type,\n                success_rate_pct,\n                first_flight,\n                flickr_images,\n                description,\n                height: { feet: height },\n                diameter: { feet: diameter },\n                mass: { lb: mass }\n               } = data.rocket;\n\n              return (\n                <div>\n                  <h1 className=\"display-4 my-3\">\n                  <span className=\"text-danger\">Rocket:</span> { rocket_name }\n                  </h1>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\"> \n                      <img className=\"img-style prime-img\" src={ this.primaryPic(flickr_images[0]) } alt={ rocket_name }/> <hr/>\n                      <div className=\"thumbs\">\n                        {\n                          flickr_images.map( img => (\n                            <ImageThumb \n                              key={ img } \n                              url={ img } \n                              alt={ rocket_name } \n                              selectThumb={ this.selectThumb } \n                              isHighlighted={ this.isHighlighted } \n                            />\n                          ))\n                        }\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <h4 className=\"mb-3\">Rocket Details</h4>\n                      <p>Name: { rocket_name }</p>\n                      <p>Type: { rocket_type }</p>\n                      <p>First Flight: <Moment format=\"MMMM Do, YYYY\">{ first_flight }</Moment></p>\n                      <p>Success Rate: { ' ' }\n                        <span className={classNames({ 'text-success': success_rate_pct > 70, 'text-danger' : success_rate_pct < 70 })}>\n                          { success_rate_pct } %\n                        </span>\n                      </p>\n                      <section>\n                       <h6>Ship Dimensions</h6>\n                       <p>Height: { height } feet</p>\n                       <p>Diameter: { diameter } feet</p>\n                       <p>Mass: { this.formatNum(mass) } lbs</p>\n                      </section>\n                      <p>Description: { description }</p><br/>\n                      <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Link to=\"/rockets\" className=\"btn btn-secondary\">Back</Link>\n                      </div>\n                      <br/>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          }\n        </Query>\n        \n      </Fragment>\n    )\n  }\n}\n\nexport default Rocket\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst COMPANY_QUERY = gql(`\n  query CompanyQuery {\n    company {\n      name\n      founder\n      founded\n      employees\n      vehicles\n      launch_sites\n      summary\n      headquarters {\n        address\n        city\n        state\n      }\n    }\n  }\n`);\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Query query={ COMPANY_QUERY }>\n        {\n          ({loading, error, data}) => {\n            if(loading) return <h4>Loading....</h4>;\n            if(error) console.log(error);\n            const {\n              name,\n              founder,\n              founded,\n              employees,\n              vehicles,\n              launch_sites,\n              summary,\n              headquarters: { address, city, state }\n            } = data.company\n\n            return (\n              <div className=\"home\">\n                <section className=\"home-hero\">\n                  <h4>{ summary }</h4>\n                </section>\n                <div className=\"card text-center text-white home-details\">\n                  <h4 className=\"card-header black\">{ name } Company Details</h4>\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"card border-dark mb-3\">\n                          <h5 className=\"card-header black\">Founded</h5>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{ founded }</h5>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"card border-dark mb-3\">\n                          <h5 className=\"card-header black\">Founder</h5>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{ founder }</h5>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"card border-dark mb-3\">\n                          <h5 className=\"card-header black black\">Employees</h5>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{ employees }</h5>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"card border-dark mb-3\">\n                          <h5 className=\"card-header black\">Vehicles</h5>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{ vehicles }</h5>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"card border-dark mb-3\">\n                          <h5 className=\"card-header black\">Launch Sites</h5>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{ launch_sites }</h5>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"card border-dark mb-3\">\n                          <h5 className=\"card-header black\">Address</h5>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{ address }<br/>{ city }, { state }</h5>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        }\n      </Query>\n    </Fragment>\n  )\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div id=\"notfound\">\n      <div class=\"notfound text-white\">\n        <div class=\"notfound-404\">\n          <h1><span>4</span><span>0</span><span>4</span></h1>\n        </div>\n        <h2>we are sorry, but the page you requested was not found</h2>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Launches from './Components/Launches';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Launch from './Components/Launch';\nimport Nav from './Components/Nav';\nimport Rockets from './Components/Rockets';\nimport Rocket from './Components/Rocket';\nimport Home from './Components/Home';\nimport NotFound from './Components/NotFound';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={ client } >\n        <Router>\n          <main>\n            <Nav />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={ Home } />\n                <Route exact path=\"/launches\" component={ Launches } />\n                <Route exact path=\"/launch/:flight_number\" component={ Launch } />\n                <Route exact path=\"/rockets\" component={ Rockets } />\n                <Route exact path=\"/rocket/:rocket_id\" component={ Rocket } />\n                <Route component={ NotFound } />\n              </Switch>\n            </div>\n          </main>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}